import l from"./media-chrome-button.js";import{defineCustomElement as m}from"./utils/defineCustomElement.js";import{Document as a}from"./utils/server-safe-globals.js";import{mediaUIEvents as t}from"./media-chrome-html-element.js";const s='<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path class="icon" d="M19 7h-8v6h8V7zm2-4H3c-1.1 0-2 .9-2 2v14c0 1.1.9 1.98 2 1.98h18c1.1 0 2-.88 2-1.98V5c0-1.1-.9-2-2-2zm0 16.01H3V4.98h18v14.03z"/><path d="M0 0h24v24H0z" fill="none"/></svg>',o=a.createElement("template");o.innerHTML=`
  <style>
  :host([media-is-pip]) slot:not([name=exit]) > *, 
  :host([media-is-pip]) ::slotted(:not([slot=exit])) {
    display: none;
  }

  /* Double negative, but safer if display doesn't equal 'block' */
  :host(:not([media-is-pip])) slot:not([name=enter]) > *, 
  :host(:not([media-is-pip])) ::slotted(:not([slot=enter])) {
    display: none;
  }
  </style>

  <slot name="enter">${s}</slot>
  <slot name="exit">${s}</slot>
`;class i extends l{constructor(e={}){e=Object.assign({slotTemplate:o},e),super(e)}handleClick(e){const n=this.mediaIsPip?t.MEDIA_EXIT_PIP_REQUEST:t.MEDIA_ENTER_PIP_REQUEST;this.dispatchMediaEvent(n)}}m("media-pip-button",i);export default i;
