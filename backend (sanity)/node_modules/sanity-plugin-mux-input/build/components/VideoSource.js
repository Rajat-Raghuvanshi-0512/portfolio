"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = VideoSource;
var _icons = require("@sanity/icons");
var _ui = require("@sanity/ui");
var _react = _interopRequireWildcard(require("react"));
var _useDevicePixelRatio = require("use-device-pixel-ratio");
var _VideoSource = require("./VideoSource.styles");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function VideoSource(_ref) {
  var assets = _ref.assets,
    isLoading = _ref.isLoading,
    secrets = _ref.secrets,
    isLastPage = _ref.isLastPage,
    onSelect = _ref.onSelect,
    onLoadMore = _ref.onLoadMore;
  var handleClick = (0, _react.useCallback)(event => onSelect(event.currentTarget.dataset.id), [onSelect]);
  var handleKeyPress = (0, _react.useCallback)(event => {
    if (event.key === 'Enter') {
      onSelect(event.currentTarget.dataset.id);
    }
  }, [onSelect]);
  var width = 200 * (0, _useDevicePixelRatio.getDevicePixelRatio)({
    maxDpr: 2
  });
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_ui.Box, {
    padding: 4
  }, /*#__PURE__*/_react.default.createElement(_VideoSource.ThumbGrid, {
    gap: 2
  }, assets.map(asset => {
    return /*#__PURE__*/_react.default.createElement(_ui.Card, {
      key: asset._id,
      as: "button",
      "data-id": asset._id,
      onClick: handleClick,
      onKeyPress: handleKeyPress,
      tabIndex: 0,
      radius: 2,
      padding: 1,
      style: {
        lineHeight: 0
      },
      __unstable_focusRing: true
    }, /*#__PURE__*/_react.default.createElement(_VideoSource.VideoThumbnail, {
      asset: asset,
      secrets: secrets,
      width: width
    }));
  })), isLoading && assets.length === 0 && /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    justify: "center"
  }, /*#__PURE__*/_react.default.createElement(_ui.Spinner, {
    muted: true
  })), !isLoading && assets.length === 0 && /*#__PURE__*/_react.default.createElement(_ui.Text, {
    align: "center",
    muted: true
  }, "No videos")), assets.length > 0 && !isLastPage && /*#__PURE__*/_react.default.createElement(_VideoSource.CardLoadMore, {
    tone: "default",
    padding: 4
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    direction: "column"
  }, /*#__PURE__*/_react.default.createElement(_ui.Button, {
    type: "button",
    icon: _icons.DownloadIcon,
    loading: isLoading,
    onClick: onLoadMore,
    text: "Load more",
    tone: "primary"
  }))));
}
//# sourceMappingURL=VideoSource.js.map