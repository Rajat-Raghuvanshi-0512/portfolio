"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = SelectAssets;
var _react = _interopRequireWildcard(require("react"));
var _SanityClient = _interopRequireDefault(require("../clients/SanityClient"));
var _VideoSource = _interopRequireDefault(require("./VideoSource"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
var PER_PAGE = 20;
function createQuery() {
  var start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : PER_PAGE;
  return (/* groq */"*[_type == \"mux.videoAsset\"] | order(_updatedAt desc) [".concat(start, "...").concat(end, "] {_id, playbackId, thumbTime, data}")
  );
}
function SelectAssets(_ref) {
  var onSelect = _ref.onSelect,
    secrets = _ref.secrets;
  var pageNoRef = (0, _react.useRef)(0);
  var _useState = (0, _react.useState)(false),
    _useState2 = _slicedToArray(_useState, 2),
    isLastPage = _useState2[0],
    setLastPage = _useState2[1];
  var _useState3 = (0, _react.useState)(false),
    _useState4 = _slicedToArray(_useState3, 2),
    isLoading = _useState4[0],
    setLoading = _useState4[1];
  var _useState5 = (0, _react.useState)([]),
    _useState6 = _slicedToArray(_useState5, 2),
    assets = _useState6[0],
    setAssets = _useState6[1];
  var fetchPage = (0, _react.useCallback)(pageNo => {
    var start = pageNo * PER_PAGE;
    var end = start + PER_PAGE;
    setLoading(true);
    return _SanityClient.default.fetch(createQuery(start, end)).then(result => {
      setLastPage(result.length < PER_PAGE);
      setAssets(prev => prev.concat(result));
    }).finally(() => setLoading(false));
  }, []);
  var handleSelect = (0, _react.useCallback)(id => {
    var selected = assets.find(doc => doc._id === id);
    if (!selected) {
      throw new TypeError("Failed to find video asset with id: ".concat(id));
    }
    onSelect(selected);
  }, [assets, onSelect]);
  var handleLoadMore = (0, _react.useCallback)(() => {
    fetchPage(++pageNoRef.current);
  }, [fetchPage]);
  (0, _react.useEffect)(() => void fetchPage(pageNoRef.current), [fetchPage]);
  return /*#__PURE__*/_react.default.createElement(_VideoSource.default, {
    onSelect: handleSelect,
    assets: assets,
    isLastPage: isLastPage,
    isLoading: isLoading,
    onLoadMore: handleLoadMore,
    secrets: secrets
  });
}
//# sourceMappingURL=SelectAsset.js.map