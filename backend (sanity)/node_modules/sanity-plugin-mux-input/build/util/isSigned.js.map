{"version":3,"file":"isSigned.js","names":["isSigned","asset","secrets","isAssetSigned","data","playback_ids","policy","areSecretsSignable","console","error","TypeError"],"sources":["../../src/util/isSigned.ts"],"sourcesContent":["import {areSecretsSignable} from './areSecretsSignable'\nimport type {Secrets, VideoAssetDocument} from './types'\n\nexport function isSigned(asset: VideoAssetDocument, secrets: Secrets): boolean {\n  const isAssetSigned = asset.data?.playback_ids?.[0]?.policy === 'signed'\n  if (!isAssetSigned) {\n    return false\n  }\n\n  if (areSecretsSignable(secrets)) {\n    return true\n  }\n  console.error(\n    'Asset is signed',\n    {asset},\n    'but secrets are missing signingKeyId and signingKeyPrivate',\n    secrets\n  )\n  throw new TypeError(`Unable to access asset as signing keys are missing`)\n}\n"],"mappings":";;;;;;AAAA;AAGO,SAASA,QAAQ,CAACC,KAAyB,EAAEC,OAAgB,EAAW;EAAA;EAC7E,IAAMC,aAAa,GAAG,gBAAAF,KAAK,CAACG,IAAI,yEAAV,YAAYC,YAAY,oFAAxB,sBAA2B,CAAC,CAAC,2DAA7B,uBAA+BC,MAAM,MAAK,QAAQ;EACxE,IAAI,CAACH,aAAa,EAAE;IAClB,OAAO,KAAK;EACd;EAEA,IAAI,IAAAI,sCAAkB,EAACL,OAAO,CAAC,EAAE;IAC/B,OAAO,IAAI;EACb;EACAM,OAAO,CAACC,KAAK,CACX,iBAAiB,EACjB;IAACR;EAAK,CAAC,EACP,4DAA4D,EAC5DC,OAAO,CACR;EACD,MAAM,IAAIQ,SAAS,sDAAsD;AAC3E"}