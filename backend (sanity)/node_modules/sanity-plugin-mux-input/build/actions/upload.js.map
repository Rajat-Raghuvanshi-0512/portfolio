{"version":3,"file":"upload.js","names":["cancelUpload","uuid","client","observable","request","url","clientConfig","dataset","withCredentials","method","uploadUrl","options","testUrl","pipe","switchMap","validUrl","concat","of","type","testSecretsObservable","json","status","throwError","Error","generateUuid","enableSignedUrls","muxBody","input","playback_policy","mp4_support","config","query","JSON","stringify","filename","split","slice","defer","headers","mergeMap","result","asset","results","document","id","uploadFile","file","testFile","fileOptions","body","createUpChunkObservable","upload","event","from","updateAssetDocumentFromUpload","doc","catchError","err","mergeMapTo","getUpload","assetId","pollUpload","maxTries","pollInterval","tries","Promise","resolve","reject","setInterval","data","asset_id","clearInterval","getAsset","_id","_type","playbackId","playback_ids","uploadId","createOrReplace","then","window","File","optionsFromFile","error","isString","parsed","URL","protocol","match","opts","name","preserveFilename","undefined"],"sources":["../../src/actions/upload.ts"],"sourcesContent":["/* eslint-disable camelcase */\nimport {uuid as generateUuid} from '@sanity/uuid'\nimport {isString} from 'lodash'\nimport {type Observable, concat, defer, from, of, throwError} from 'rxjs'\nimport {catchError, mergeMap, mergeMapTo, switchMap} from 'rxjs/operators'\n\nimport client from '../clients/SanityClient'\nimport {createUpChunkObservable} from '../clients/upChunkObservable'\nimport config from '../config'\nimport type {MuxAsset} from '../util/types'\nimport {getAsset} from './assets'\nimport {testSecretsObservable} from './secrets'\n\nexport function cancelUpload(uuid: string) {\n  return client.observable.request({\n    url: `/addons/mux/uploads/${client.clientConfig.dataset}/${uuid}`,\n    withCredentials: true,\n    method: 'DELETE',\n  })\n}\n\nexport function uploadUrl(url: string, options: {enableSignedUrls?: boolean} = {}) {\n  return testUrl(url).pipe(\n    switchMap((validUrl) => {\n      return concat(\n        of({type: 'url', url: validUrl}),\n        testSecretsObservable().pipe(\n          switchMap((json) => {\n            if (!json || !json.status) {\n              return throwError(new Error('Invalid credentials'))\n            }\n            const uuid = generateUuid()\n            const {enableSignedUrls} = options\n            const muxBody = {\n              input: validUrl,\n              playback_policy: [enableSignedUrls ? 'signed' : 'public'],\n              mp4_support: config.mp4_support,\n            }\n            const query = {\n              muxBody: JSON.stringify(muxBody),\n              filename: validUrl.split('/').slice(-1)[0],\n            }\n\n            const dataset = client.clientConfig.dataset\n            return defer(() =>\n              client.observable.request({\n                url: `/addons/mux/assets/${dataset}`,\n                withCredentials: true,\n                method: 'POST',\n                headers: {\n                  'MUX-Proxy-UUID': uuid,\n                  'Content-Type': 'application/json',\n                },\n                query,\n              })\n            ).pipe(\n              mergeMap((result) => {\n                const asset =\n                  (result && result.results && result.results[0] && result.results[0].document) ||\n                  null\n\n                if (!asset) {\n                  return throwError(new Error('No asset document returned'))\n                }\n                return of({type: 'success', id: uuid, asset})\n              })\n            )\n          })\n        )\n      )\n    })\n  )\n}\n\nexport function uploadFile(file: File, options: {enableSignedUrls?: boolean} = {}) {\n  return testFile(file).pipe(\n    switchMap((fileOptions) => {\n      return concat(\n        of({type: 'file', file: fileOptions}),\n        testSecretsObservable().pipe(\n          switchMap((json) => {\n            if (!json || !json.status) {\n              return throwError(new Error('Invalid credentials'))\n            }\n            const uuid = generateUuid()\n            const {enableSignedUrls} = options\n            const body = {\n              mp4_support: config.mp4_support,\n              playback_policy: [enableSignedUrls ? 'signed' : 'public'],\n            }\n\n            return concat(\n              of({type: 'uuid', uuid}),\n              defer(() =>\n                client.observable.request<{\n                  sanityAssetId: string\n                  upload: {\n                    cors_origin: string\n                    id: string\n                    new_asset_settings: {\n                      mp4_support: 'standard' | 'none'\n                      passthrough: string\n                      playback_policies: ['public' | 'signed']\n                    }\n                    status: 'waiting'\n                    timeout: number\n                    url: string\n                  }\n                }>({\n                  url: `/addons/mux/uploads/${client.clientConfig.dataset}`,\n                  withCredentials: true,\n                  method: 'POST',\n                  headers: {\n                    'MUX-Proxy-UUID': uuid,\n                    'Content-Type': 'application/json',\n                  },\n                  body,\n                })\n              ).pipe(\n                mergeMap((result) => {\n                  return createUpChunkObservable(uuid, result.upload.url, file).pipe(\n                    // eslint-disable-next-line no-warning-comments\n                    // @TODO type the observable events\n                    // eslint-disable-next-line max-nested-callbacks\n                    mergeMap((event: any) => {\n                      if (event.type !== 'success') {\n                        return of(event)\n                      }\n                      return from(updateAssetDocumentFromUpload(uuid)).pipe(\n                        // eslint-disable-next-line max-nested-callbacks\n                        mergeMap((doc) => of({...event, asset: doc}))\n                      )\n                    }),\n                    // eslint-disable-next-line max-nested-callbacks\n                    catchError((err) => {\n                      // Delete asset document\n                      return cancelUpload(uuid).pipe(mergeMapTo(throwError(err)))\n                    })\n                  )\n                })\n              )\n            )\n          })\n        )\n      )\n    })\n  )\n}\n\ntype UploadResponse = {\n  data: {\n    asset_id: string\n    cors_origin: string\n    id: string\n    new_asset_settings: {\n      mp4_support: 'standard' | 'none'\n      passthrough: string\n      playback_policies: ['public' | 'signed']\n    }\n    status: string\n    timeout: number\n  }\n}\nexport function getUpload(assetId: string) {\n  return client.request<UploadResponse>({\n    url: `/addons/mux/uploads/${client.clientConfig.dataset}/${assetId}`,\n    withCredentials: true,\n    method: 'GET',\n  })\n}\n\nfunction pollUpload(uuid: string): Promise<UploadResponse> {\n  const maxTries = 10\n  let pollInterval: number\n  let tries = 0\n  let assetId: string\n  let upload: UploadResponse\n  return new Promise((resolve, reject) => {\n    pollInterval = (setInterval as typeof window.setInterval)(async () => {\n      try {\n        upload = await getUpload(uuid)\n      } catch (err) {\n        reject(err)\n        return\n      }\n      assetId = upload && upload.data && upload.data.asset_id\n      if (assetId) {\n        clearInterval(pollInterval)\n        resolve(upload)\n      }\n      if (tries > maxTries) {\n        clearInterval(pollInterval)\n        reject(new Error('Upload did not finish'))\n      }\n      tries++\n    }, 2000)\n  })\n}\n\nasync function updateAssetDocumentFromUpload(uuid: string) {\n  let upload: UploadResponse\n  let asset: {data: MuxAsset}\n  try {\n    upload = await pollUpload(uuid)\n  } catch (err) {\n    return Promise.reject(err)\n  }\n  try {\n    asset = await getAsset(upload.data.asset_id)\n  } catch (err) {\n    return Promise.reject(err)\n  }\n\n  const doc = {\n    _id: uuid,\n    _type: 'mux.videoAsset',\n    status: asset.data.status,\n    data: asset.data,\n    assetId: asset.data.id,\n    playbackId: asset.data.playback_ids[0].id,\n    uploadId: upload.data.id,\n  }\n  return client.createOrReplace(doc).then(() => {\n    return doc\n  })\n}\n\nfunction testFile(file: File) {\n  if (typeof window !== 'undefined' && file instanceof window.File) {\n    const fileOptions = optionsFromFile({}, file)\n    return of(fileOptions)\n  }\n  return throwError(new Error('Invalid file'))\n}\n\nfunction testUrl(url: string): Observable<string> {\n  const error = new Error('Invalid URL')\n  if (!isString(url)) {\n    return throwError(error)\n  }\n  let parsed\n  try {\n    parsed = new URL(url)\n  } catch (err) {\n    return throwError(error)\n  }\n  if (parsed && !parsed.protocol.match(/http:|https:/)) {\n    return throwError(error)\n  }\n  return of(url)\n}\n\nfunction optionsFromFile(opts: {preserveFilename?: boolean}, file: File) {\n  if (typeof window === 'undefined' || !(file instanceof window.File)) {\n    return opts\n  }\n  return {\n    name: opts.preserveFilename === false ? undefined : file.name,\n    type: file.type,\n  }\n}\n"],"mappings":"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"}